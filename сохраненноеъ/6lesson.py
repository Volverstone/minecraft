# –ü–æ–≥–æ–≤–æ—Ä–∏—Ç–µ —Å –¥–µ—Ç—å–º–∏ –æ:
#
# –ß—Ç–æ —Ç–∞–∫–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ? (–ø—Ä–∏–º–µ—Ä: score = 0)
#
# –ß—Ç–æ —Ç–∞–∫–æ–µ —Å–ø–∏—Å–æ–∫? (–ø—Ä–∏–º–µ—Ä: visited_blocks = [])
#
# –ó–∞—á–µ–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ? (–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏–≥—Ä—É –ø–æ–∑–∂–µ, —Å–¥–µ–ª–∞—Ç—å "–æ—á–∫–∏", —É—Ä–æ–≤–Ω–∏, –ø—Ä–æ–≥—Ä–µ—Å—Å.)
#
# –ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–∞–π–ª? –ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç—É–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é? (–¢–µ–∫—Å—Ç, —á–∏—Å–ª–∞, —Å–ø–∏—Å–∫–∏...)
#
from mcpi.minecraft import Minecraft
# mc = Minecraft.create()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫ –ø–æ–¥ –∏–≥—Ä–æ–∫–æ–º: –µ—Å–ª–∏ –∑–æ–ª–æ—Ç–æ ‚Äî –¥–∞—ë–º –æ—á–∫–∏
# 1. –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è: —Å–∏—Å—Ç–µ–º–∞ –æ—á–∫–æ–≤
# –ü—Ä–∏–º–µ—Ä: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—á–∫–∏
# üß™ –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ (1 —á–∞—Å 10 –º–∏–Ω—É—Ç)
# ‚úÖ –ü—Ä–∏–º–µ—Ä 1: –†–∞–±–æ—Ç–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
# score = 25
#
# # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
# with open("score.txt", "w") as file:
#     file.write(str(score))
#
# print("–û—á–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")


# # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—á–∫–∏
# with open("score.txt", "r") as file:
#     score = int(file.read())
#
# print("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –æ—á–∫–∏:", score)

#
#
# # ‚úÖ –ü—Ä–∏–º–µ—Ä 2: –†–∞–±–æ—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
#
# # –ü—Ä–∏–º–µ—Ä: —Å–ø–∏—Å–æ–∫ –±–ª–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å–µ—Ç–∏–ª –∏–≥—Ä–æ–∫
# visited = [(341, 2123, -22243), (124, 4215, 236)]
#
# # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
# with open("visited.txt", "w") as file:
#     for x, y, z in visited:
#         file.write(f"{x},{y},{z}\n")
#
# print("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
#
# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
# visited = []
#
# with open("visited.txt", "r") as file:
#     for line in file:
#         x, y, z = map(int, line.strip().split(","))
#         visited.append((x, y, z))
#
# print("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:", visited)


#
# import time
#
# mc = Minecraft.create()
#
# score = 0
#
# while True:
#     pos = mc.player.getTilePos()
#     block_below = mc.getBlock(pos.x, pos.y - 1, pos.z)
#
#     if block_below == 41:  # –∑–æ–ª–æ—Ç–æ
#         score += 10
#         mc.postToChat(f"U at gold! score: {score}")
#         time.sleep(1)

from mcpi.minecraft import Minecraft
from mcpi import block
from decouple import config
import time
import os
import random

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env ===
ARENA_SIZE = config("ARENA_SIZE", cast=int)
GROUND_Y = config("GROUND_Y", cast=int)
NUM_GOLD_BLOCKS = config("NUM_GOLD_BLOCKS", cast=int)
SCORE_PER_BLOCK = config("SCORE_PER_BLOCK", cast=int)
TOTAL_SCORE = NUM_GOLD_BLOCKS * SCORE_PER_BLOCK

SCORE_FILE = "gold_score.txt"
FOUND_FILE = "gold_found.txt"

# === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Minecraft ===
mc = Minecraft.create()

# === –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞ ===
player_pos = mc.player.getTilePos()
base_x = player_pos.x
base_y = GROUND_Y
base_z = player_pos.z

# === –ü–æ—Å—Ç—Ä–æ–π–∫–∞ –∞—Ä–µ–Ω—ã ===
mc.setBlocks(base_x - 1, base_y, base_z - 1,
             base_x + ARENA_SIZE, base_y + 5, base_z + ARENA_SIZE,
             block.AIR.id)  # –û—á–∏—Å—Ç–∫–∞

mc.setBlocks(base_x, base_y - 1, base_z,
             base_x + ARENA_SIZE - 1, base_y - 1, base_z + ARENA_SIZE - 1,
             block.GRASS.id)  # –ü–æ–ª

# === –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∑–æ–ª–æ—Ç—ã—Ö –±–ª–æ–∫–æ–≤ –ø–æ–¥ –∑–µ–º–ª—ë–π ===
gold_blocks = []
used_coords = set()

while len(gold_blocks) < NUM_GOLD_BLOCKS:
    x = random.randint(base_x, base_x + ARENA_SIZE - 1)
    z = random.randint(base_z, base_z + ARENA_SIZE - 1)
    if (x, z) not in used_coords:
        used_coords.add((x, z))
        y = base_y - 2
        mc.setBlock(x, y, z, block.GOLD_BLOCK.id)
        gold_blocks.append((x, y, z))

# === –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ —Å—á—ë—Ç–∞ ===
if os.path.exists(SCORE_FILE):
    with open(SCORE_FILE, "r") as f:
        score = int(f.read())
else:
    score = 0

# === –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤ ===
found_blocks = []
if os.path.exists(FOUND_FILE):
    with open(FOUND_FILE, "r") as f:
        for line in f:
            x, y, z = map(int, line.strip().split(","))
            found_blocks.append((x, y, z))

# === –°—Ç–∞—Ä—Ç –∏–≥—Ä—ã ===
mc.postToChat("–ê—Ä–µ–Ω–∞ –≥–æ—Ç–æ–≤–∞! –ù–∞–π–¥–∏ –≤—Å–µ –∑–æ–ª–æ—Ç—ã–µ –±–ª–æ–∫–∏.")
mc.postToChat(f"–¢–µ–∫—É—â–∏–µ –æ—á–∫–∏: {score}")

while score < TOTAL_SCORE:
    pos = mc.player.getTilePos()
    block_below = mc.getBlock(pos.x, pos.y - 1, pos.z)
    check_pos = (pos.x, pos.y - 2, pos.z)  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±–ª–æ–∫–∞ –ø–æ–¥ –∑–µ–º–ª—ë–π

    if block_below == block.GRASS.id and check_pos in gold_blocks and check_pos not in found_blocks:
        found_blocks.append(check_pos)
        score += SCORE_PER_BLOCK
        mc.postToChat(f"–ó–æ–ª–æ—Ç–æ –Ω–∞–π–¥–µ–Ω–æ! –û—á–∫–∏: {score}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—á–∫–∏
        with open(SCORE_FILE, "w") as f:
            f.write(str(score))

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –±–ª–æ–∫–∏
        with open(FOUND_FILE, "w") as f:
            for x, y, z in found_blocks:
                f.write(f"{x},{y},{z}\n")

        time.sleep(1)

mc.postToChat("–¢—ã –ø–æ–±–µ–¥–∏–ª! –í—Å–µ –±–ª–æ–∫–∏ –Ω–∞–π–¥–µ–Ω—ã!")
